/*

Shows count of users who activated in 2019 (note: a customer is considered activated when he goes through at least one successful deposit and places a bet)
The following code keeps in mind the following:
Players can bet before they ever deposit money, and it’s also possible to deposit before placing a bet. There are two states that contribute to activation: “bettor has ever made a deposit in this or a preceding year” and “bettor has ever placed a bet in this or a preceding year”. From the question, it sounds like activation year is the first year in which both conditions become true.

*/

WITH UsersWhoFirstBetIn2019
AS
(
	SELECT playerid, YEAR(MIN(betplaceddate)) as year_first_bet
	FROM ACTIVITY
	GROUP BY playerid 
),
UsersWhoFirstDepositedIn2019
AS
(
	SELECT playerid, YEAR(MIN(cartdateid)) as year_first_deposit
	FROM 
	(
		SELECT playerid, cartdateid
		FROM DEPOSIT
		WHERE payment_status = ‘a’
	)
	GROUP BY playerid
),
SELECT COUNT (*) FROM
UsersWhoFirstBetIn2019 first_bet
FULL JOIN UsersWhoFirstDepositedIn2019 first_deposit
ON first_bet.playerid = first_deposit.playerid
WHERE year_first_bet = year_first_deposit = 2019 
	OR (year_first_bet = 2019 AND year_first_deposit < 2019)
	OR (year_first_bet < 2019 AND year_first_deposit = 2019)

---------------------------------------------------------------------------------------------------------------------------------


/*
Using the constraints as above this code generates a list with the following fields
i.	playerid
ii.	alias
iii.	email
iv.	total stake generated in 2019
v.	margin in 2019 (i.e. gross revenue/stake)
vi.	last bet placed date
vii.	total amount deposited on Sportsbook (approved deposit only)
*/

WITH UsersWhoFirstBetIn2019
AS
(
	SELECT playerid, YEAR(MIN(betplaceddate)) as year_first_bet
	FROM ACTIVITY
	GROUP BY playerid 
),
UsersWhoFirstDepositedIn2019
AS
(
	SELECT playerid, YEAR(MIN(cartdateid)) as year_first_deposit
	FROM 
	(
		SELECT playerid, cartdateid
		FROM DEPOSIT
		WHERE payment_status = ‘a’
	)
	GROUP BY playerid
),
UsersActivatedIn2019
AS
(
SELECT playerid FROM
UsersWhoFirstBetIn2019 first_bet
FULL JOIN UsersWhoFirstDepositedIn2019 first_deposit
BY first_bet.playerid = first_deposit.playerid
WHERE year_first_bet = year_first_deposit = 2019 
	OR (year_first_bet = 2019 AND year_first_deposit < 2019)
	OR (year_first_bet < 2019 AND year_first_deposit = 2019)
),
AnnualizedActivity
AS
(
	SELECT
		Playerid,
		SUM(stake) AS total_stake_2019,
SUM(ggr) AS total_margin_2019,
MAX(betplaceddate) AS last_bet_2019
FROM ACTIVITY
WHERE YEAR(betsettleddate) = 2019
-- note: I don’t know whether Fanduel SportsBook’s
-- methodology is to treat bets placed in 2019 or settled
-- in 2019 as having been ‘generated’ in 2019. If I picked
-- incorrectly here, please be aware that I did consider
-- both possibilities. 
GROUP BY playerid
),
TotalApprovedDeposit
AS
(
	SELECT playerid, sum(payment_amount) as 
		total_approved_deposit_all_time
	FROM DEPOSIT
	WHERE payment_status = ‘a’
	-- note: it’s unclear from the question whether this is intended
	-- to be all deposits or just 2019 deposits – if 2019 only, add:
	-- WHERE YEAR(cartdateid) = 2019
	GROUP BY playerid
),
SELECT *, USER.alias, USER.email, AnnualizedActivity.total_stake_2019, 
	AnnualizedActivity.total_margin_2019, 
	AnnualizedActivity.last_bet_2019,
	TotalApprovedDeposit.total_approved_deposit_all_time
FROM UsersActivatedIn2019
INNER JOIN USER
ON UsersActivatedIn2019.playerid = USER.playerid
INNER JOIN AnnualizedActivity
ON UsersActivatedIn2019.playerid = AnnualizedActivity.playerid
INNER JOIN TotalApprovedDeposit
ON UsersActivatedIn2019.playerid = TotalApprovedDeposit.playerid

 
---------------------------------------------------------------------------------------------------------------------------------

/*
This code shows between January 2019 to April 2019 the percentage of Parlay bets 
*/

WITH MonthlyParlayBets
AS
(
SELECT count(parlay_bets) as parlay_count, month
FROM
(
SELECT MONTH(betplaceddate) as month, DISTINCT(betid) as 
parlay_bets)
FROM ACTIVITY
WHERE YEAR(betplaceddate) = 2019 AND bettype = ‘Parlay’
	)
	GROUP BY month
),
CountTotalBets
AS
(
SELECT count(bets) as bet_count, month
FROM
(
SELECT MONTH(betplaceddate) AS month, DISTINCT(betid) AS bets
FROM ACTIVITY
	)
	GROUP BY month
),
SELECT CountTotalBets.month, MonthlyParlayBets.parlay_count / 
CountTotalBets.bet_count as parlay_bet_fraction
FROM CountTotalBets
INNER JOIN MonthlyParlayBets
ON CountTotalBets.month = MonthlyParlayBets.month
WHERE month BETWEEN 1 AND 4
 

/*
This code shows the Reg-to-Act ratio in each month from January 2019 to April 2019
*/

WITH AllRegistrations
AS
(
SELECT month(registration_date) AS registration_month,   
ISNULL(activation_date) AS is_activated 
FROM USER
WHERE YEAR(registration_date) = 2019
),
AllByMonth 
AS
(
SELECT registration_month, COUNT(*) AS count_registered
FROM AllRegistrations
GROUP BY registration_month
),
EverActivatedByMonth
AS
(
SELECT registration_month, COUNT(*) AS count_activated
FROM AllRegistrations
WHERE is_activated IS TRUE
GROUP BY registration_month
),
SELECT month, reg_to_act AS count_activated / count_registered
FROM AllByMonth
INNER JOIN EverActivatedByMonth
BY AllByMonth.month = EverActivatedByMonth.month
